Possibly useful documentation:
- http://tinyvga.com/vga-timing/640x480@60Hz
- https://people.ece.cornell.edu/land/courses/ece5760/DE1_SOC/DE1-SoC_User_manualv.1.2.2_revE.pdf
- https://www.fpga4student.com

First the difference between digital vs analog signals:
- Analog
    - Smooth, continuous waves of a large range
    - Good for capturing real world nuance
    - Prone to noise
- Digital
    - Discrete binary representation
    - Better accuracy and noise resistance
    - Good for storage and long-distance transmission
    - Carry less information


Connection:
- Signals are made up of
    - HSYNC (horizontal sync)
    - VSYNC (vertical sync)
        - These two are digital signals
    - VGA_BLANK_N
        - 1 if video on, 0 if not
    - RGB (red, green, blue)
        - analog voltage levels
        - usually done by the resistor ladder DAC (digital to analog converters) on the FPGAs


Sychronization/Timing:
- Visible area: where visible pixels are
- Front/back porch: a short delay before/after the sync pulse
- Sync pulse: active sync signal 
    - comes from the video source (computer) to the display Monitor
- HSYNC represents the start of a new row/column of pixels
- VSYNC signals the completion of all rows, moving the beam back to the top-left corner to begin a new frame
- Pulse frequencies are usually (for a 25MHz) clock:
    - vertical freq: 60Hz
    - horizontal freq: 31.5kHz
    - note that newer VGA are usually multisync, so no need to be exact 60 and 31.5kHz


Monitor:
- Displays VGA Signals
- Pixel grid: each pixel can display a specific colour
- PRECODED/UNCHANGEABLE ASPECTS:
    - Displays line by line, left to right, then lines go top to bottom
    - Number of pixels (could change based on monitor but is constant for that monitor)
        - Usually 640 x 480



Displaying images on FPGA + VGA:
- Two ways to load text files/images onto FPGA: loading a text file by reading the binary/hex file with verilog OR initialize 
it as initial values within block memory
    - First way isn't fully meant for FPGA, will have to try second way
- For Quartus, can use Mega-Function in MegaWizard plug-in manager to initalize block memory with text file or .mif
    - MegaFunction was replaced with IP Catalog in Tools
- .mif files
    - basically just regular text files formatted in a certain way (search it up)


